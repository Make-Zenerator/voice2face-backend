name: Backend

on:
  pull_request:
    branches: ['main'] # main 브랜치에 pull request될 때 동작 
  push:
    branches: ['main'] # main 브랜치에 push될 때 동작

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          cd backend
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create .env file
        run: |
          cd backend
          echo "AWS_ACCESS_KEY = ${{secrets.AWS_ACCESS_KEY}}" > .env.prod
          echo "AWS_SECRET_ACCESS_KEY = ${{secrets.AWS_SECRET_ACCESS_KEY}}" > .env.prod
          echo "MINIO_BUCKET = ${{secrets.MINIO_BUCKET}}" > .env.prod
          echo "MINIO_ENDPOINT = ${{secrets.MINIO_ENDPOINT}}" > .env.prod
          echo "USERNAME = ${{secrets.DB_USERNAME}}" > .env.prod
          echo "PASSWORD = ${{secrets.DB_PASSWORD}}" > .env.prod
          echo "HOST = ${{secrets.DB_HOST}}" > .env.prod
          echo "DATABASE = ${{secrets.DB_DATABASE}}" > .env.prod
          echo "SECRET_KEY = ${{secrets.SECRET_KEY}}" > .env.prod
          echo "TOKEN_EXPIRED = ${{secrets.TOKEN_EXPIRED}}" > .env.prod
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Build docker file and setting deploy files
        run: |
          docker build -t makezenerator/backend:latest backend/
          docker push makezenerator/backend:latest
          docker build -t makezenerator/simple_worker:latest backend/simple_worker/
          docker push makezenerator/simple_worker:latest
  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Connect to server 
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USERNAME}}
          key: ${{secrets.SERVER_KEY}}
          port: ${{secrets.SERVER_PORT}}
          script: | 
            docker login -u "${{secrets.DOCKERHUB_USERNAME}}" -p "${{secrets.DOCKERHUB_PASSWORD}}"
            docker stop $(docker ps -a -q)
            docker rm -f $(docker ps -a -q)
            docker pull makezenerator/backend:latest
            docker pull makezenerator/simple_worker:latest
            # docker run -d -p 5050:5050 makezenerator/backend:latest
            docker compose -f /root/voice2face-backend/backend/docker-compose.prod.yml up -d 
            docker image prune -f
